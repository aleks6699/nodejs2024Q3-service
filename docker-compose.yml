version: '3.7'

services:
  db:
    image: postgres:17
    container_name: home-library-db
    env_file: .env
    restart: always
    ports:
      - "${PORT_BD}:${PORT_BD}"
    networks:
      - app_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
    container_name: home-library-app   
    env_file: .env
    restart: always
    volumes:
      - node_modules:/app/node_modules
      - logs_data:/app/logs
    ports:
      - "${PORT}:${PORT}"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - app_net
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /app/src
          ignore:
            - node_modules          

volumes:
  postgres_data:
  postgres_logs:
  node_modules:
  logs_data:

networks:
  app_net:
    driver: bridge
